// Generated by view binder compiler. Do not edit!
package org.tensorflow.lite.examples.digitclassification.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.divyanshu.draw.widget.DrawView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.tensorflow.lite.examples.digitclassification.R;

public final class FragmentDigitCanvasBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final Button btnClear;

  @NonNull
  public final DrawView digitCanvas;

  @NonNull
  public final RecyclerView recyclerViewResults;

  @NonNull
  public final TextView tvInferenceTime;

  @NonNull
  public final TextView tvPredictedResults;

  private FragmentDigitCanvasBinding(@NonNull CoordinatorLayout rootView, @NonNull Button btnClear,
      @NonNull DrawView digitCanvas, @NonNull RecyclerView recyclerViewResults,
      @NonNull TextView tvInferenceTime, @NonNull TextView tvPredictedResults) {
    this.rootView = rootView;
    this.btnClear = btnClear;
    this.digitCanvas = digitCanvas;
    this.recyclerViewResults = recyclerViewResults;
    this.tvInferenceTime = tvInferenceTime;
    this.tvPredictedResults = tvPredictedResults;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDigitCanvasBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDigitCanvasBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_digit_canvas, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDigitCanvasBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnClear;
      Button btnClear = ViewBindings.findChildViewById(rootView, id);
      if (btnClear == null) {
        break missingId;
      }

      id = R.id.digitCanvas;
      DrawView digitCanvas = ViewBindings.findChildViewById(rootView, id);
      if (digitCanvas == null) {
        break missingId;
      }

      id = R.id.recyclerViewResults;
      RecyclerView recyclerViewResults = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewResults == null) {
        break missingId;
      }

      id = R.id.tvInferenceTime;
      TextView tvInferenceTime = ViewBindings.findChildViewById(rootView, id);
      if (tvInferenceTime == null) {
        break missingId;
      }

      id = R.id.tvPredictedResults;
      TextView tvPredictedResults = ViewBindings.findChildViewById(rootView, id);
      if (tvPredictedResults == null) {
        break missingId;
      }

      return new FragmentDigitCanvasBinding((CoordinatorLayout) rootView, btnClear, digitCanvas,
          recyclerViewResults, tvInferenceTime, tvPredictedResults);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
